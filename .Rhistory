use_python("'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'")
path <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
py_run_file('settings.py')
# Begin Python processing and output generation
py_run_file('inst/py/settings.py')
py_run_file('settings.py')
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
use_python("'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'")
path <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
# Begin Python processing and output generation
py_run_file('settings.py')
library(reticulate)
use_python("'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'")
path <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
# Begin Python processing and output generation
py_run_file('settings.py')
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
use_python("'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'")
path <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
# Begin Python processing and output generation
py_run_file('settings.py')
# Begin Python processing and output generation
py_run_file('settings.py')
library(characterizationPaperPackage)
library(reticulate)
use_python("'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'")
path <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
# Begin Python processing and output generation
py_run_file('settings.py')
py_run_file('creating_summaries.py')
# Begin Python processing and output generation
py_run_file('settings.py')
# Begin Python processing and output generation
py_run_file('inst/py/settings.py')
py_run_file('creating_summaries.py')
py_run_file('tfidf_vectorizer.py')
# Params
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- 'ohdsi_cumc_2021q1r2'
paste(DB, ".dbo")
paste(DB, ".dbo", sep='')
example.R
R
print(DB)
print(DB)
source("~/Research/characterizationPaperPackage/extras/example.R")
source("~/Research/characterizationPaperPackage/extras/example.R")
source("~/Research/characterizationPaperPackage/extras/example.R")
source("~/Research/characterizationPaperPackage/extras/example.R")
use_python(PYTHON_PATH) # Python interpreter specified in parameters
py_run_file('inst/py/settings.py')
# Load the package
library(characterizationPaperPackage)
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
# Parameters
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- 'ohdsi_cumc_2021q1r2'
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
use_python(PYTHON_PATH) # Python interpreter specified in parameters
py_run_file('inst/py/settings.py')
py_run_file('creating_summaries.py')
# py_run_file('') # commented out, this creates TTD graphs locally.
py_run_file('diagnostic_delay.py')
stop
# Load the package
library(characterizationPaperPackage)
library(reticulate)
library(characterizationPaperPackage)
# Parameters
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- 'ohdsi_cumc_2021q1r2'
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = "sql server",
server = "10.115.115.119",
user = "tonysun",
password = "Fairness!123",
)
use_python(PYTHON_PATH) # Python interpreter specified in parameters
py_run_file('settings.py')
py_run_file('creating_summaries.py')
my.data = read.csv('../../../csv/credentials.csv')
my.data
my.data.dbms
my.data$ï..dbms
my.data$ï..dbms
my.data$1
my.data$1..dbms
my.data$1..dbms
my.data
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv('../../../csv/credentials.csv')
private.data
private.data$server
private.data = read.csv('../../../csv/credentials.csv', fileencoding = 'UTF-8-BOM')
private.data = read.csv('../../../csv/credentials.csv', fileEncoding = 'UTF-8-BOM')
private.data
private.data$dbms
private.data = read.csv('../../../csv/credentials.csv', fileEncoding = 'UTF-8-BOM')
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
example
example <- DatabaseConnector::querySql(conn, "select * from ohdsi_cumc_2021q1r2.results.pbr_sexdiff_cohort_covarate_summary_v5 where cohort_definition_id = 11117")
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
example <- DatabaseConnector::querySql(conn, "select * from ohdsi_cumc_2021q1r2.results.pbr_sexdiff_cohort_covarate_summary_v5 where cohort_definition_id = 11117")
example
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- private.data$python_path  # eg: 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PYTHON_PATH
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# py_run_file('settings.py')
py_run_file('creating_summaries.py')
library(characterizationPaperPackage)
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# py_run_file('settings.py')
py_run_file('creating_summaries.py')
# py_run_file('settings.py')
py_run_file('creating_summaries.py')
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
use_python(PYTHON_PATH) # Python interpreter specified in parameters
py_run_file('settings.py')
sys <- import("sys", convert = TRUE)
sys$path
install.packages("reticulate")
library(characterizationPaperPackage)
install.packages("reticulate")
install.packages("reticulate")
library(characterizationPaperPackage)
install.packages("reticulate")
library(reticulate)
# Load the package
library(characterizationPaperPackage)
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
PYTHON_PATH
use_python(PYTHON_PATH) # Python interpreter specified in parameters
py_run_file('settings.py')
py_run_file('creating_summaries.py')
detach("package:reticulate", unload = TRUE)
uninstall.packages('reticulate')
uninstall.packages("reticulate")
uninstall("reticulate")
uninstall.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
install.packages("reticulate")
library(characterizationPaperPackage)
py_config()
py_available(TRUE)
library(reticulate)
py_available()
py_config()
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- '../../../csv/credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
use_python(PYTHON_PATH) # Python interpreter specified in parameters
sys <- import("sys", convert = TRUE)
py_run_file('settings.py')
py_run_file('creating_summaries.py')
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
library(characterizationPaperPackage)
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
library(characterizationPaperPackage)
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
library(characterizationPaperPackage)
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
source("~/Research/characterizationPaperPackage/extras/CodeToRun.R")
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
private.data
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
# Instantiate cohorts:
pathToCsv <- system.file("settings", "CohortsToCreateFinal.csv", package = "characterizationPaperPackage")
cohortsToCreate <- readr::read_csv(pathToCsv, col_types = readr::cols())
# Delete table if it already exists, perhaps from a partial execution of the script.
# Commented out, because new users likely won't already have this table.
# TODO: paste(DB, ".dbo", sep='')
sql_part1 = "drop table "
sql_part2 = paste(sql_part1, db, sep='')
sql_part3 = paste(sql_part2, ".results.", sep = '')
sql       = paste(sql_part3, cohortTable, sep = '')
# Delete table if it already exists, perhaps from a partial execution of the script.
# Commented out, because new users likely won't already have this table.
# TODO: paste(DB, ".dbo", sep='')
sql_part1 = "drop table "
sql_part2 = paste(sql_part1, DB, sep='')
sql_part3 = paste(sql_part2, ".results.", sep = '')
sql       = paste(sql_part3, cohortTable, sep = '')
sql
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
sql
DatabaseConnector::executeSql(conn, sql)
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
DatabaseConnector::executeSql(conn, sql)
DatabaseConnector::executeSql(conn, sql)
sql
write.table(sql, file="sql.txt", row.names=FALSE, col.names=FALSE)
disconnect(connection = conn)
detach("package:characterizationPaperPackage", unload = TRUE)
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
sql
write.table(sql, sql.txt)
write.table(sql, sql.txt)
write.table(sql, 'sql.txt')
DatabaseConnector::executeSql(conn, sql)
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
DatabaseConnector::executeSql(conn, sql)
library(characterizationPaperPackage)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
# Instantiate cohorts:
pathToCsv <- system.file("settings", "CohortsToCreateFinal.csv", package = "characterizationPaperPackage")
cohortsToCreate <- readr::read_csv(pathToCsv, col_types = readr::cols())
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
write.csv(sql, 'sql.txt')
DatabaseConnector::executeSql(conn, sql)
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# https://community.rstudio.com/t/rpytools-error-recurring-with-package-reticulate/66625
sys <- import("sys", convert = TRUE) # Fixes run-time warning and error?
py_run_file('settings.py')
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# https://community.rstudio.com/t/rpytools-error-recurring-with-package-reticulate/66625
sys <- import("sys", convert = TRUE) # Fixes run-time warning and error?
py_run_file('settings.py')
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# https://community.rstudio.com/t/rpytools-error-recurring-with-package-reticulate/66625
sys <- import("sys", convert = TRUE) # Fixes run-time warning and error?
py_run_file('inst/py/settings.py')
detach("package:characterizationPaperPackage", unload = TRUE)
library(characterizationPaperPackage)
# Load the package
library(characterizationPaperPackage)
library(reticulate)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# https://community.rstudio.com/t/rpytools-error-recurring-with-package-reticulate/66625
sys <- import("sys", convert = TRUE) # Fixes run-time warning and error?
py_run_file('inst/py/settings.py')
py_run_file('creating_summaries.py')
# Load the package
library(characterizationPaperPackage)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
# You do not have to change the below [but you can]
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
# Run processing for all_condition_occurrence_summary.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "all_condition_occurrence_summary",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
# Run processing sexdiff_cohort_reference_ver5.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "sexdiff_cohort_reference_ver5.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
# Run processing for all_condition_occurrence_summary.sql script
sql <- SqlRender::loadRenderTranslateSql(sqlFilename = "all_condition_occurrence_summary.sql",
packageName = "characterizationPaperPackage",
dbms = attr(conn, "dbms"))
DatabaseConnector::executeSql(conn, sql)
py_run_file('generating_prevalence_graphs.py')
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# Load the package
library(characterizationPaperPackage)
# Parameters [loaded from credentials.csv, which is not uploaded to Github!]
CREDENTIALS  <- 'C:\\Users\\tonys\\Documents\\Research\\csv\\credentials.csv' # login credentials
library(characterizationPaperPackage)
private.data = read.csv(CREDENTIALS, fileEncoding = 'UTF-8-BOM')
PYTHON_PATH  <- 'C:\\Users\\tonys\\AppData\\Local\\Programs\\Python\\Python39'
PACKAGE_PATH <- 'c:/Users/tonys/Research/characterizationPaperPackage/'
DB           <- private.data$db
# You do not have to change the below [but you can]
cdmDatabaseSchema    <- paste(DB, ".dbo", sep='')     # eg: "ohdsi_cumc_2021q1r2.dbo"
cohortDatabaseSchema <- paste(DB, ".results", sep='') # eg: "ohdsi_cumc_2021q1r2.results"
vocabularyDatabaseSchema <- cdmDatabaseSchema
cohortTable <- "cohort_characterization"              # this is the name of the output table
# Optional: specify where the temporary files will be created:
options(andromedaTempFolder = file.path(path, "andromedaTemp"))
# Details for connecting to the server:
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = private.data$dbms,
server = private.data$server,
user = private.data$user,
password = private.data$password,
)
# For Oracle: define a schema that can be used to emulate temp tables:
oracleTempSchema <- NULL
# Start connection
conn <- DatabaseConnector::connect(connectionDetails)
use_python(PYTHON_PATH) # Python interpreter specified in parameters
# https://community.rstudio.com/t/rpytools-error-recurring-with-package-reticulate/66625
# If it does throw the rpytools error, it's just a runtime error that doesn't actually
# Inhibit the scripts.
sys <- import("sys", convert = TRUE) # Fixes run-time warning and error?
# Load the package
library(characterizationPaperPackage)
py_run_file('inst/py/settings.py')
disconnect(connection = )
disconnect(connection = conn)
